<?xml version="1.0" standalone="no"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN"
    "http://cvs.apache.org/viewcvs.cgi/*checkout*/xml-forrest/src/resources/schema/dtd/document-v11.dtd">

<document>
  <header>
    <title>Standard FOP Extensions</title>
  </header>
  <body>
    <p>By "extension", we mean any data that can be placed in the input XML document that is not addressed by the XSL-FO standard.
By having a mechanism for supporting extensions, FOP is able to add features that are not covered in the specification.</p>
      <p>The extensions documented here are included with FOP, and are automatically available to you. If you wish to add an extension of your own to FOP, please see the <link href="dev/extensions.html">Developers' Extension Page</link>.</p>
    <note>All extensions required the correct use of an appropriate namespace in your input document.</note>
      <section id="svg">
        <title>SVG</title>
        <p>
Please see the <link href="graphics.html#svg">SVG documentation</link> for more details.
        </p>
      </section>
    <section id="fo-extensions">
      <title>FO Extentions</title>
      <section id="fox-namespace">
        <title>Namespace</title>
        <p>By convention, FO extensions in FOP use the "fox:" namespace identifier.
To use any of the FO extensions, add a namespace entry for http://xml.apache.org/fop/extensions
to the root element:</p>
<source><![CDATA[<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format"
               xmlns:fox="http://xml.apache.org/fop/extensions">]]></source>
      </section>
      <section id="bookmarks">
        <title>PDF Bookmarks</title>
        <p>
You can provide outlines inside the root object (but outside any
page-sequences or other formatting objects). Here's an example of an outline
entry:
        </p>
        <source>
<![CDATA[<fox:outline internal-destination="sec3">
    <fox:label>Running FOP</fox:label>

    <fox:outline internal-destination="sec3-1">
      <fox:label>Prerequisites</fox:label>
    </fox:outline>
  </fox:outline>
</fo:root>]]></source>
        <p>
It works similarly to a basic-link. There is also an external-destination
property, but it isn't supported currently. See the pdfoutline.fo file in
examples/fo/basic for a more complete example.
        </p>
      </section>
      <section id="named-destinations">
        <title>Anchors or Named Destinations</title>
        <p>Use the fox:destination element to define "named destinations" inside a PDF document.
These are useful as fragment identifiers, e.g. "http://server/document.pdf#anchor-name".
fox:destination elements can be placed almost anywhere in the fo document, including a child of
root, a block-level element, or an inline-level element.
For the destination to actually work, it must correspond to an "id" attribute on some fo element
within the document. In other words, the "id" attribute actually creates the "view" within the
PDF document. The fox:destination simply gives that view an independent name.
</p>
        <source><![CDATA[<fox:destination internal-destination="table-of-contents"/>
...
<fo:block id="table-of-contents">Table of Contents</fo:block>]]></source>
        <warning>It is possible that in some future release of FOP, <em>all </em>elements with
"id" attributes will generate named-destinations, which will eliminate the need for
fox:destination.</warning>
      </section>
      <section id="table-continue-label">
        <title>Continued-label (for table-header/-footer)</title>
        <p>
Please see examples/fo/basic/contlabel.fo
        </p>
      </section>
    </section>
  </body>
</document>

