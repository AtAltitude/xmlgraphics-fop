<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN"
    "http://cvs.apache.org/viewcvs.cgi/*checkout*/xml-forrest/src/resources/schema/dtd/document-v11.dtd">

<document>
  <header>
    <title>Developer Tools</title>
  </header>
  <body>
    <p>This page documents items that may be helpful to other developers, especially to those who are new to FOP. Exhaustive treatment of these topics is better suited to other fora, but the information presented here is intended to deal with FOP-specific issues related to these tools, especially "gotchas", and to help developers get jump-started.</p>
    <section>
      <title>CVS</title>
      <p>You will need a CVS client to be able to gain access to the FOP repository.</p>
      <p>To create a patch to be submitted for consideration to be committed, do the following:</p>
      <ul>
        <li><code>cd</code> to the directory above the "xml-fop" directory that was created when you checked out the code. You can actually <code>cd</code> farther down the directory tree if your changes do not comprehend the entire FOP directory structure. However, don't go any deeper than will allow all of your changes to be included in one "diff". Also, adjust</li>
        <li>Run: <code>cvs -q diff -wu xml-fop</code></li>
        <li>If you are running WinCVS, select "Admin/Command Line" for a console in which to key the above command.</li>
        <li>On a Linux/Unix machine, you will want to redirect the output from the above command into a file. If you are using GNU WinCVS, you can cut the output from the console window and paste it into a file. The "-w" ignores whitespace differences. The "-u" puts the diff in "universal" format. You may wish to use the "-N" option as well, which is supposed to treat new files as if there were an old 0 byte file -- in other words, it is supposed to include the new file in the patch. However, it only operates on files that have been "add"ed to the CVS repository, which cannot be done without commit access.</li>
      </ul>
    </section>
    <section>
      <title>Integrated Development Environments (IDEs)</title>
      <p>An IDE is not required, but will generally be found to be helpful, especially for serious debugging and refactoring.</p>
      <p>Borland's JBuilder 7/8 does not support Ant builds unless you have the Enterprise Edition (which is quite expensive). This causes problems with any code that is generated by the Ant build. First, you must run the Ant build before you can use the IDE. Second, when you are editing in the IDE, you must be editing the generated files, which means that you must make any changes to the source files in another editor. This is less serious for development on the trunk, but in the maintenance branch, all source files were "generated".</p>
   <p>Sun ONE Studio Four does support Ant, but seems to use a built-in version, and as of this writing chokes on the FOP build file, saying that it is not valid. There is awkward because there is no official DTD for Ant, and it may be merely an Ant version issue.</p>
    </section>
  </body>
</document>
